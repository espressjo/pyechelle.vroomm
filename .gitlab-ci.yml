stages:
  - setup
  - testing
  - building
  - deploying

variables:
  BASE_LAYER: bookworm-slim
  UV_LINK_MODE: copy
  CACHE_PATH: "$CI_PROJECT_DIR/.cache"
  UV_CACHE_DIR: "$CACHE_PATH/uv"
  PIP_CACHE_DIR: "$CACHE_PATH/pip"

.uv-matrix: &uv-matrix
  parallel:
    matrix:
      - PYTHON_VERSION: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]

uv-install:
  stage: setup
  image: ghcr.io/astral-sh/uv:python$PYTHON_VERSION-$BASE_LAYER
  <<: *uv-matrix
  cache:
    - key:
        files:
          - uv.lock
      paths:
        - $UV_CACHE_DIR
  script:
    - export UV_PROJECT_ENVIRONMENT=venv$PYTHON_VERSION
    - uv sync --python $PYTHON_VERSION
    - uv cache prune --ci
  artifacts:
    paths:
      - venv$PYTHON_VERSION
    expire_in: 1 week

test-python:
  stage: testing
  image: ghcr.io/astral-sh/uv:python$PYTHON_VERSION-$BASE_LAYER
  <<: *uv-matrix
  needs:
    - job: uv-install
      artifacts: true
  script:
    - export UV_PROJECT_ENVIRONMENT=venv$PYTHON_VERSION
    - uv run pytest --cov --cov-report=html --cov-report=term
  coverage: '/TOTAL.*\s+(\d+\%)/'
  artifacts:
    paths:
      - htmlcov/
    expire_in: 1 month

lint:
  stage: testing
  image: ghcr.io/astral-sh/uv:python3.11-$BASE_LAYER
  needs:
    - job: uv-install
      artifacts: true
  script:
    - uvx ruff check .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG'

build:
  stage: building
  image: ghcr.io/astral-sh/uv:python3.11-$BASE_LAYER
  needs:
    - job: uv-install
      artifacts: true
  script:
    - uv build
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_TAG

pages:
  stage: building
  image: ghcr.io/astral-sh/uv:python3.11-$BASE_LAYER
  needs:
    - job: uv-install
      artifacts: true
  script:
    - cd docs
    - uv run make html
    - mv build/html ../public
  artifacts:
    paths:
      - public
    expire_in: 3 months
  only:
    - master

deploy:
  stage: deploying
  image: ghcr.io/astral-sh/uv:python3.11-$BASE_LAYER
  needs:
    - build
  script:
    - uv run -- python -m twine upload dist/* --non-interactive
  rules:
    - if: $CI_COMMIT_TAG
  environment:
    name: pypi
    url: https://pypi.org/project/pyechelle/
  id_tokens:
    PYPI_TOKEN:
      aud: https://pypi.org
