variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  UV_LINK_MODE: copy

cache:
  paths:
    - .cache/pip
    - .venv/
    - ~/.cache/uv/  # Cache uv installations between runs

stages:
  - testing
  - building
  - deploying

# templates
.install-deps-template: &install-deps
  before_script:
    - pip install uv
    - uv venv
    - source .venv/bin/activate
    # Install the package and all dependencies (including dev dependencies)
    - uv pip install -e .
    - uv sync --group dev

.test-template: &test
  <<: *install-deps
  stage: testing
  coverage: '/TOTAL.*\s+(\d+\%)/'
  script: pytest --cov --cov-report html --cov-report term
  artifacts:
    paths:
      - tests/coverage
    when: always
    expire_in: 1 month

test:
  <<: *test
  image: python:$PYTHON_VERSION
  only:
    - master
  parallel:
    matrix:
      - PYTHON_VERSION: [ "3.9", "3.10", "3.11", "3.12" ]

#lint:
#  <<: *install-deps
#  stage: testing
#  image: python:3.12
#  script:
#    - ruff check .
#  needs: []

pages:
  <<: *install-deps
  image: python:3.9
  stage: building
  script:
    - cd docs ; make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  only:
    - master

build:
  <<: *install-deps
  image: python:3.9
  stage: building
  script:
    - uv pip install build
    - python -m build
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz
  only:
    - master
    - tags

deploy:
  stage: deploying
  image: python:3.9
  needs:
    - build
  before_script:
    - pip install uv twine
  script:
    - twine upload --repository pypi dist/*
  only:
    - tags
  environment:
    name: pypi
    url: https://pypi.org/project/pyechelle/